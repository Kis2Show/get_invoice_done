# 🔧 发票OCR系统环境变量配置示例
# 复制此文件为 .env 并根据您的环境修改配置
# 配合 docker-compose.yml 使用，镜像: kis2show/get_invoice_done:latest

# =============================================================================
# 🔒 安全配置 (必须修改!)
# =============================================================================

# 应用密钥 - 用于JWT和会话加密 (生产环境必须修改!)
SECRET_KEY=your-super-secret-key-change-this-in-production-environment

# CORS允许的源地址 - 根据您的前端地址修改
CORS_ORIGINS=http://localhost:3000,http://localhost:8000,https://yourdomain.com

# =============================================================================
# 📊 数据库配置
# =============================================================================

# SQLite数据库路径 (容器内路径)
DATABASE_URL=sqlite:///./data/invoices.db

# =============================================================================
# 📁 文件处理配置
# =============================================================================

# 发票文件存储目录 (容器内路径)
INVOICE_DIR=/app/invoices

# 最大文件大小 (字节) - 默认10MB
MAX_FILE_SIZE=10485760

# OCR识别置信度阈值 (0.0-1.0)
OCR_CONFIDENCE_THRESHOLD=0.6

# =============================================================================
# 📝 日志配置
# =============================================================================

# 日志级别 (DEBUG/INFO/WARNING/ERROR)
LOG_LEVEL=INFO

# =============================================================================
# 🐳 Docker用户配置
# =============================================================================

# 容器用户ID (与docker-compose.yml中的user: "100:100"对应)
CONTAINER_UID=100
CONTAINER_GID=100

# 时区设置
TZ=Asia/Shanghai

# =============================================================================
# 🚀 部署说明
# =============================================================================

# 1. 复制配置文件:
#    cp .env.example .env
#
# 2. 修改必要配置:
#    - SECRET_KEY: 生成强密钥
#    - CORS_ORIGINS: 设置前端地址
#
# 3. 创建必要目录:
#    mkdir -p invoices/{pdf,imge,unrecognized} data logs
#
# 4. 设置目录权限 (Linux/macOS):
#    sudo chown -R 100:100 invoices data logs
#    chmod -R 755 invoices data logs
#
# 5. 启动服务:
#    docker-compose up -d
#
# 6. 查看日志:
#    docker-compose logs -f invoice-ocr
#
# 7. 访问服务:
#    http://localhost:8000
#
# 8. 数据库管理 (可选):
#    docker-compose --profile admin up -d
#    http://localhost:8080
#
# 9. 停止服务:
#    docker-compose down
